<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		
	</fx:Declarations>
	
	<fx:Metadata>
		[Event(name="OnChangeImage", type="editor.event.NotifyEvent")]
	</fx:Metadata>
	
	
	<fx:Script>
		<![CDATA[
			import editor.event.NotifyEvent;
			import editor.utils.Globals;
			
			import pixel.ui.control.UIControl;
			import pixel.ui.control.asset.AssetBitmap;
			import pixel.ui.control.asset.AssetImage;
			import pixel.ui.control.asset.AssetMovieClip;
			import pixel.ui.control.asset.IAsset;
			import pixel.ui.control.asset.IAssetImage;
			import pixel.ui.control.asset.IAssetLibrary;
			import pixel.ui.control.event.EditModeEvent;
			
			[Bindable]
			protected var BindEnable:Boolean = false;
			
			[Bindable]
			protected var CurrentControl:UIControl = null;
			public function set Control(Value:UIControl):void
			{
				if(CurrentControl)
				{
					CurrentControl.removeEventListener(EditModeEvent.FRAME_RESIZED,ControlUpdate);
					CurrentControl.removeEventListener(EditModeEvent.CONTROL_MOVED,ControlUpdate);
				}
				CurrentControl = Value;
				CurrentControl.addEventListener(EditModeEvent.FRAME_RESIZED,ControlUpdate);
				CurrentControl.addEventListener(EditModeEvent.CONTROL_MOVED,ControlUpdate);
				Initialized();
			}
			
			protected function ControlUpdate(event:EditModeEvent):void
			{
				
			}
			
			//[Bindable]
			public function get Control():UIControl
			{
				return CurrentControl;
			}
			
			public function Reset():void
			{
				CurrentControl = null;
			}
			/**
			 * 初始化数据
			 **/
			protected function Initialized():void
			{
				
			}
			
			protected function BrowserImage(event:MouseEvent):void
			{
				var Notify:NotifyEvent = new NotifyEvent(NotifyEvent.CHANGEIMAGE);
				Notify.Params.push(OnImageSelectedNotify);
				dispatchEvent(Notify);
			}
			
			protected function OnImageSelectedNotify(LibraryId:String,AssetId:String):void
			{
				var AssetItem:IAsset = Globals.FindAssetById(LibraryId,AssetId);
				if(AssetItem is IAssetImage)
				{
					ImageSelected(new Bitmap(IAssetImage(AssetItem).image),AssetId);
				}
				else if(AssetItem is AssetMovieClip)
				{
					movieSelected(AssetMovieClip(AssetItem).resource,AssetId);
				}
			}
			
			protected function ImageSelected(Image:Bitmap,ImageId:String):void
			{
				
			}
			
			protected function movieSelected(movie:MovieClip,id:String):void
			{
			}
			
			[Bindable]
			protected var _styleEnabled:Boolean = true;
			public function set styleEnabled(value:Boolean):void
			{
				_styleEnabled = value;
			}
			
			[Bindable]
			protected var _propertieEnabled:Boolean = true;
			public function set propertieEnabled(value:Boolean):void
			{
				_propertieEnabled = value;
			}
		]]>
	</fx:Script>
	
	
</s:VGroup>
